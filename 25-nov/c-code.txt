/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* getSumAbsoluteDifferences(int* nums, int numsSize, int* returnSize){
    int *result = (int *)malloc(numsSize * sizeof(int));
    *returnSize = numsSize;

    /* Get left sum and right sum, both sums without first element in nums */
    int right_sum = 0;
    int left_sum = 0;
    for (int i = 1; i < numsSize; ++i) {
        right_sum += nums[i];
    }

    /* First result is the sum of all element on the right side minus first element */
    result[0] = right_sum - (numsSize - 1) * nums[0];

    for (int i = 1; i < numsSize; ++i) {
        /* Add/remove element */
        right_sum -= nums[i];
        left_sum += nums[i - 1];

        /* Calcuate left result and right result, curr val larger than left side and less than right side */
        int left = i * nums[i] - left_sum;
        int right = right_sum - (numsSize - i - 1) * nums[i];
        result[i] = left + right;
    }

    return result;
}